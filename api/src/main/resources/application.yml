spring:
  datasource:
    # For Oracle Autonomous Database (ADB) using the wallet:
    # - Unzip the ADB wallet into ./oracle-wallet and mount it inside the container at /opt/oracle/wallet
    # - Set DB_SERVICE_NAME to the TNS alias (e.g. adb_high) found in tnsnames.ora inside the wallet
    # - Ensure the container sets TNS_ADMIN=/opt/oracle/wallet (see docker-compose)
    #
    # The driver will use the alias from tnsnames.ora. Optionally you can embed TNS_ADMIN in the URL:
    # jdbc:oracle:thin:@adb_high?TNS_ADMIN=/opt/oracle/wallet
    url: jdbc:oracle:thin:@${DB_SERVICE_NAME}
    username: ${DB_USERNAME:${DB_USER:}}
    password: ${DB_PASSWORD:${DB_PWD:}}
    driver-class-name: oracle.jdbc.OracleDriver
    hikari:
      connection-init-sql: "ALTER SESSION DISABLE PARALLEL DML"
  #    init:
  #      data-locations: classpath:data-preprod.sql
  #    tomcat:
  #      max-wait: 20000
  #      max-active: 50
  #      max-idle: 20
  #      min-idle: 15
  jackson:
    serialization:
      fail-on-empty-beans: false
  liquibase:
   change-log: classpath:/db/master.xml
   enabled: true
    # enabled: false
  messages:
    encoding: UTF-8
  servlet:
    multipart:
      max-request-size: 7MB
      max-file-size: 7MB
  # Use default application.yml environment by not setting an explicit active profile here.
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  jpa:
    hibernate:
      # ddl-auto: none
      ddl-auto: none
    properties:
      hibernate:
        enable_lazy_load_no_trans: true
        format_sql: true
        # Oracle dialect for Hibernate
        dialect: org.hibernate.dialect.Oracle12cDialect
        id:
          new_generator_mappings: false
    defer-datasource-initialization: false
    properties.mail.smtp:
      auth: true
      starttls.enable: true
      ssl.trust: smtp.gmail.com
  sql:
    init:
      mode: always

  mail:
    host: ${SMTP_HOST:smtp.gmail.com}
    port: ${SMTP_PORT:587}
    username: ${SMTP_USER:}
    password: ${SMTP_PWD:}
    protocol: smtp
    tls: true
    properties.mail.smtp:
      auth: true
      starttls.enable: true
      ssl.trust: ${SMTP_HOST:smtp.gmail.com}
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=1000,expireAfterWrite=20m
server:
  port: 8080 # This is the default port anyway, but you can change it here

security:
  jwt:
    token:
      secret-key: ${JWT_SECRET_KEY:dev-secret}
      expire-length: 1209600000 # 1000*60*60*24*14
  invitation-via-email: ${INVITATION_VIA_EMAIL:false}
frontend:
  url: ${PUBLIC_FRONT_URL:http://localhost:3000}
mail:
  recipients: ${MAIL_RECIPIENTS:}
  enable: ${ENABLE_EMAIL_NOTIFICATIONS:false}
superAdmin:
  role:
    name: SuperAdministratorGrash@p;l
fast-spring:
  username: ${FASTSPRING_USER:}
  password: ${FASTSPRING_PWD:}
management:
  health:
    mail:
      enabled: true
api:
  host: ${PUBLIC_API_URL:http://localhost:8080}
storage:
  type: ${STORAGE_TYPE:MINIO}
  minio:
    endpoint: ${MINIO_ENDPOINT:}
    bucket: ${MINIO_BUCKET:}
    access-key: ${MINIO_ACCESS_KEY:}
    secret-key: ${MINIO_SECRET_KEY:}
    public-endpoint: ${PUBLIC_MINIO_ENDPOINT:}
  gcp:
    project-id: ${GCP_PROJECT_ID:}
    bucket-name: ${GCP_BUCKET_NAME:}
    value: ${GCP_JSON:}
    json-path: ${GCP_JSON_PATH:}

allowed-organization-admins: ${ALLOWED_ORGANIZATION_ADMINS:}
cloud-version: ${CLOUD_VERSION:false}
enable-sso: ${ENABLE_SSO:false}
oauth2:
  success-redirect-url: ${PUBLIC_FRONT_URL}/oauth2/success
  failure-redirect-url: ${PUBLIC_FRONT_URL}/oauth2/failure
  provider: ${OAUTH2_PROVIDER}
license-key: ${LICENSE_KEY:}
license-fingerprint-required: ${LICENSE_FINGERPRINT_REQUIRED:true}
white-labeling:
  logo-paths: ${LOGO_PATHS:}
  custom-colors: ${CUSTOM_COLORS:}
  brand-config: ${BRAND_CONFIG:}